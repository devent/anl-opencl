#include <opencl_utils.h>
#include <noise_gen.h>
#include <imaging.h>
#include <kernel.h>

kernel void map2d_image(
global struct SMappingRanges *g_ranges,
write_only image2d_t output
) {
    $insert_localMapRange
    long seed = 200;
    kiss09_state srnd;
    kiss09_seed(&srnd, seed);
    const float a = 0.5;
    const float r = value_noise3D(coord[i], seed, linearInterp);
    const float g = value_noise3D(coord[i], seed*2, linearInterp);
    const float b = value_noise3D(coord[i], seed*2, linearInterp);
    const float f = simpleFractalLayer3(coord[i],
		value_noise3D, seed*10, linearInterp, 10, 1,
		false, 0, 1, 0, 0);
    const float v = simplefBm3(coord[i], value_noise3D, 200, noInterp, random_kiss09, &srnd, 3, f, true);
    write_imagef(output, (int2)(g0, g1), (float4)(r*v, g*v, b*v, v));
}
