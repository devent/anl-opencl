/*
 * Copyright (C) 2021 Erwin Müller <erwin@muellerpublic.de>
 * Released as open-source under the Apache License, Version 2.0.
 *
 * ****************************************************************************
 * ANL-OpenCL :: OpenCL
 * ****************************************************************************
 *
 * Copyright (C) 2021 Erwin Müller <erwin@muellerpublic.de>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ****************************************************************************
 * ANL-OpenCL :: OpenCL is a derivative work based on Josua Tippetts' C++ library:
 * http://accidentalnoise.sourceforge.net/index.html
 * ****************************************************************************
 *
 * Copyright (C) 2011 Joshua Tippetts
 *
 *   This software is provided 'as-is', without any express or implied
 *   warranty.  In no event will the authors be held liable for any damages
 *   arising from the use of this software.
 *
 *   Permission is granted to anyone to use this software for any purpose,
 *   including commercial applications, and to alter it and redistribute it
 *   freely, subject to the following restrictions:
 *
 *   1. The origin of this software must not be misrepresented; you must not
 *      claim that you wrote the original software. If you use this software
 *      in a product, an acknowledgment in the product documentation would be
 *      appreciated but is not required.
 *   2. Altered source versions must be plainly marked as such, and must not be
 *      misrepresented as being the original software.
 *   3. This notice may not be removed or altered from any source distribution.
 */
var searchData=
[
  ['imageheight_172',['imageHeight',['../structKernelContext.html#ab9dfb69c156a7ea97823d77b3a3d9b40',1,'KernelContext']]],
  ['imagesize_173',['imageSize',['../structKernelContext.html#a65bb86204880289e92e849b419b24773',1,'KernelContext']]],
  ['imagewidth_174',['imageWidth',['../structKernelContext.html#a4cf17df972687b9c9a825b0358ebfd3b',1,'KernelContext']]],
  ['imaging_2ec_175',['imaging.c',['../imaging_8c.html',1,'']]],
  ['imaging_2eh_176',['imaging.h',['../imaging_8h.html',1,'']]],
  ['imaging_5fmap_5ftest_2ecpp_177',['imaging_map_test.cpp',['../imaging__map__test_8cpp.html',1,'']]],
  ['imaging_5fscaletorange_5fdata_178',['imaging_scaleToRange_data',['../structimaging__scaleToRange__data.html',1,'']]],
  ['imaging_5fscaletorange_5fparam_179',['imaging_scaleToRange_param',['../classimaging__scaleToRange__param.html',1,'']]],
  ['imaging_5fscaletorange_5ftest_2ecpp_180',['imaging_scaleToRange_test.cpp',['../imaging__scaleToRange__test_8cpp.html',1,'']]],
  ['input_181',['input',['../classopencl__cellular__function2D__fixture.html#a42e21a966fb98047363bd20aef4f025f',1,'opencl_cellular_function2D_fixture::input()'],['../classopencl__cellular__function3D__fixture.html#a32c959384d5221e6a681d45c6c3480ea',1,'opencl_cellular_function3D_fixture::input()'],['../classopencl__cellular__function4D__fixture.html#af804e8d6ddd1180102b6ab9ae35cd1f9',1,'opencl_cellular_function4D_fixture::input()'],['../classopencl__cellular__function6D__fixture.html#ad880cf14752fd62aa8aa2ecf347546c4',1,'opencl_cellular_function6D_fixture::input()'],['../classopencl__combineColor__fixture.html#a336ab1e2c41be7d6658db579c1ed98d5',1,'opencl_combineColor_fixture::input()'],['../classopencl__heightmap__example__fixture.html#a6f9ae0ac5b235eea11b3a4f0dea295f4',1,'opencl_heightmap_example_fixture::input()'],['../classopencl__noise2D__functions__fixture.html#a62757fa403442dfc33e0f79e9cccc480',1,'opencl_noise2D_functions_fixture::input()'],['../classopencl__noise3D__functions__fixture.html#ac2c178bf8ed75429a7c18005ad505284',1,'opencl_noise3D_functions_fixture::input()'],['../classopencl__noise4D__functions__fixture.html#a8ed3c88bc2beba214d3f131767c3d865',1,'opencl_noise4D_functions_fixture::input()'],['../classopencl__noise6D__functions__fixture.html#a4bc974fbaf91d9e064a4c7f041040cba',1,'opencl_noise6D_functions_fixture::input()'],['../classopencl__simpleBillow3__fixture.html#ad17f8f32955edf3f2ae92407964906c1',1,'opencl_simpleBillow3_fixture::input()'],['../classopencl__simpleBillowLayer__fixture.html#aa06bebf3708ebce3367270bd838f8fff',1,'opencl_simpleBillowLayer_fixture::input()'],['../classopencl__simplefBm3__fixture.html#a400918dc7d43221047100cc63aba28cd',1,'opencl_simplefBm3_fixture::input()'],['../classopencl__simpleFractalLayer__fixture.html#acd02d28c9d8562b4bc349c1908930ec1',1,'opencl_simpleFractalLayer_fixture::input()'],['../classopencl__simpleRidgedLayer__fixture.html#a1470de7700619514002f6633245ded7d',1,'opencl_simpleRidgedLayer_fixture::input()'],['../classopencl__simpleRidgedMultifractal3__fixture.html#abc3425b71ccdd3e48f496f29ead792bf',1,'opencl_simpleRidgedMultifractal3_fixture::input()']]],
  ['inputbuffer_182',['inputBuffer',['../classopencl__cellular__function2D__fixture.html#abf1e988bc7dd76d81b168408a2ab42e7',1,'opencl_cellular_function2D_fixture::inputBuffer()'],['../classopencl__cellular__function3D__fixture.html#a857ee01d9d55f587f81dde9a8d19123b',1,'opencl_cellular_function3D_fixture::inputBuffer()'],['../classopencl__cellular__function4D__fixture.html#ae27a522ed6db4786bc90a747affe6143',1,'opencl_cellular_function4D_fixture::inputBuffer()'],['../classopencl__cellular__function6D__fixture.html#a32a35dfe668123d82f5a3fdd52fa8267',1,'opencl_cellular_function6D_fixture::inputBuffer()'],['../classopencl__combineColor__fixture.html#afda5726b4ccd3e0977f206ff4b7eb6cc',1,'opencl_combineColor_fixture::inputBuffer()'],['../classopencl__heightmap__example__fixture.html#a0329a100cea9b9f9ed699dbff18fa8e7',1,'opencl_heightmap_example_fixture::inputBuffer()'],['../classopencl__noise2D__functions__fixture.html#a5afe3a0226e7cae9f57490284182fefe',1,'opencl_noise2D_functions_fixture::inputBuffer()'],['../classopencl__noise3D__functions__fixture.html#acfb369a644c1f5af1ee9561d284c8d30',1,'opencl_noise3D_functions_fixture::inputBuffer()'],['../classopencl__noise4D__functions__fixture.html#ab63d4a3ec84c5ea204c3351ffdf40ed6',1,'opencl_noise4D_functions_fixture::inputBuffer()'],['../classopencl__noise6D__functions__fixture.html#ab08d8d31ab360bdd1584a3e91bd48efc',1,'opencl_noise6D_functions_fixture::inputBuffer()'],['../classopencl__simpleBillow3__fixture.html#af9a6888671d327b482a047c47852111b',1,'opencl_simpleBillow3_fixture::inputBuffer()'],['../classopencl__simpleBillowLayer__fixture.html#a44feae668901204a3072777d904c54fe',1,'opencl_simpleBillowLayer_fixture::inputBuffer()'],['../classopencl__simplefBm3__fixture.html#af1fcfedddc2fb6d17195eba7e8d87448',1,'opencl_simplefBm3_fixture::inputBuffer()'],['../classopencl__simpleFractalLayer__fixture.html#a368c445912f9848b552efe62f3e2a410',1,'opencl_simpleFractalLayer_fixture::inputBuffer()'],['../classopencl__simpleRidgedLayer__fixture.html#a32129a315df7a425cbcce99c3588b87d',1,'opencl_simpleRidgedLayer_fixture::inputBuffer()'],['../classopencl__simpleRidgedMultifractal3__fixture.html#a84f04d9634643c52ab7f72730ba58d57',1,'opencl_simpleRidgedMultifractal3_fixture::inputBuffer()']]],
  ['instantiate_5ftest_5fsuite_5fp_183',['INSTANTIATE_TEST_SUITE_P',['../distance__functions__test_8cpp.html#ad25963c13e26353547fe21603883809a',1,'INSTANTIATE_TEST_SUITE_P(noise, distEuclid2_params, Values(Func2{vector2{0.000, 0.000}, vector2{0.000, 0.000}, 0.000}, Func2{vector2{0.000, 0.000}, vector2{5.000, 5.000}, 7.071})):&#160;distance_functions_test.cpp'],['../distance__functions__test_8cpp.html#a02a351df173ab9f66b6295e325079b71',1,'INSTANTIATE_TEST_SUITE_P(noise, distManhattan2_params, Values(Func2{vector2{0.000, 0.000}, vector2{0.000, 0.000}, 0.000}, Func2{vector2{0.000, 0.000}, vector2{5.000, 5.000}, 10.000})):&#160;distance_functions_test.cpp'],['../distance__functions__test_8cpp.html#a168162f06ce835c12a3a5e8159999287',1,'INSTANTIATE_TEST_SUITE_P(noise, distGreatestAxis2_params, Values(Func2{vector2{0.000, 0.000}, vector2{0.000, 0.000}, 0.000}, Func2{vector2{0.000, 0.000}, vector2{5.000, 0.000}, 5.000}, Func2{vector2{0.000, 0.000}, vector2{5.000, 5.000}, 5.000})):&#160;distance_functions_test.cpp'],['../distance__functions__test_8cpp.html#a96edd07f5434e04819d14fab15be127f',1,'INSTANTIATE_TEST_SUITE_P(noise, distLeastAxis2_params, Values(Func2{vector2{0.000, 0.000}, vector2{0.000, 0.000}, 0.000}, Func2{vector2{0.000, 0.000}, vector2{0.000, 5.000}, 0.000}, Func2{vector2{0.000, 0.000}, vector2{5.000, 5.000}, 5.000})):&#160;distance_functions_test.cpp'],['../imaging__map__test_8cpp.html#aefde719b1100a7b620ed7123168f6adc',1,'INSTANTIATE_TEST_SUITE_P(imaging_map_no_z_test, map2D_2_no_z_params, Values(map2D_2_data { calc_seamless_no_z_none, create_ranges_default(), 2, 2, 0, {(vector2){-1.000000,-1.000000},(vector2){0.000000,-1.000000},(vector2){-1.000000, 0.000000},(vector2){0.000000, 0.000000} } })):&#160;imaging_map_test.cpp'],['../imaging__map__test_8cpp.html#ae7f7b7f6d89baaa8ab388edc9f05d8d0',1,'INSTANTIATE_TEST_SUITE_P(imaging_map_test, map2D_3_params, Values(map2D_3_data { calc_seamless_none, create_ranges_default(), 2, 2, 99, {(vector3){-1.000000,-1.000000, 99.00000},(vector3){0.000000,-1.000000, 99.00000},(vector3){-1.000000, 0.000000, 99.00000},(vector3){0.000000, 0.000000, 99.00000} } }, map2D_3_data { calc_seamless_none, create_ranges_map2D(-10, 10, -10, 10), 4, 4, 99, {(vector3){-10.00000,-10.00000, 99.00000},(vector3){-5.00000,-10.00000, 99.00000},(vector3){0.00000,-10.00000, 99.00000},(vector3){5.00000,-10.00000, 99.00000},(vector3){-10.00000,-5.00000, 99.00000},(vector3){-5.00000,-5.00000, 99.00000},(vector3){0.00000,-5.00000, 99.00000},(vector3){5.00000,-5.00000, 99.00000},(vector3){-10.00000, 0.00000, 99.00000},(vector3){-5.00000, 0.00000, 99.00000},(vector3){0.00000, 0.00000, 99.00000},(vector3){5.00000, 0.00000, 99.00000},(vector3){-10.00000, 5.00000, 99.00000},(vector3){-5.00000, 5.00000, 99.00000},(vector3){0.00000, 5.00000, 99.00000},(vector3){5.00000, 5.00000, 99.00000} } })):&#160;imaging_map_test.cpp'],['../imaging__map__test_8cpp.html#a0da44da506b2cceca5bc4e32a6106891',1,'INSTANTIATE_TEST_SUITE_P(imaging_map_no_z_test, map2D_no_z_3_params, Values(map2D_3_data { calc_seamless_no_z_x, create_ranges_default(), 2, 2, 99, {(vector3){-0.681690,-1.000000,-1.000000},(vector3){-1.318310,-1.000000,-1.000000},(vector3){-0.681690,-1.000000, 0.000000},(vector3){-1.318310,-1.000000, 0.000000} } })):&#160;imaging_map_test.cpp'],['../imaging__map__test_8cpp.html#ae249d5bcc179424bf0bcb155e299472c',1,'INSTANTIATE_TEST_SUITE_P(imaging_map_test, map2D_4_params, Values(map2D_4_data { calc_seamless_x, create_ranges_default(), 2, 2, 99, {(vector4){-0.68169,-1.00000,-1.00000, 99.00000},(vector4){-1.31831,-1.00000,-1.00000, 99.00000},(vector4){-0.68169,-1.00000, 0.00000, 99.00000},(vector4){-1.31831,-1.00000, 0.00000, 99.00000} } }, map2D_4_data { calc_seamless_y, create_ranges_default(), 2, 2, 99, {(vector4){-1.00000,-0.68169,-1.00000, 99.00000},(vector4){0.00000,-0.68169,-1.00000, 99.00000},(vector4){-1.00000,-1.31831,-1.00000, 99.00000},(vector4){0.00000,-1.31831,-1.00000, 99.00000} } }, map2D_4_data { calc_seamless_z, create_ranges_default(), 2, 2, 99, {(vector4){-1.000000,-1.000000,-0.681690,-1.000021},(vector4){0.000000, 0.000000,-0.681690,-1.000021},(vector4){-1.000000,-1.000000,-0.681690,-1.000021},(vector4){0.000000, 0.000000,-0.681690,-1.000021} } }, map2D_4_data { calc_seamless_z, create_ranges_default(), 4, 4, 99, {(vector4){-1,-1,-0.68169,-1.000021},(vector4){-0.5,-0.5,-0.68169,-1.000021},(vector4){0, 0,-0.68169,-1.000021},(vector4){0.5, 0.5,-0.68169,-1.000021},(vector4){-1,-1,-0.68169,-1.000021},(vector4){-0.5,-0.5,-0.68169,-1.000021},(vector4){0, 0,-0.68169,-1.000021},(vector4){0.5, 0.5,-0.68169,-1.000021},(vector4){-1,-1,-0.68169,-1.000021},(vector4){-0.5,-0.5,-0.68169,-1.000021},(vector4){0, 0,-0.68169,-1.000021},(vector4){0.5, 0.5,-0.68169,-1.000021},(vector4){-1,-1,-0.68169,-1.000021},(vector4){-0.5,-0.5,-0.68169,-1.000021},(vector4){0, 0,-0.68169,-1.000021},(vector4){0.5, 0.5,-0.68169,-1.000021} } })):&#160;imaging_map_test.cpp'],['../imaging__map__test_8cpp.html#ad4e230d796e898e02d21504bbaacce46',1,'INSTANTIATE_TEST_SUITE_P(imaging_map_test, map2D_8_params, Values(map2D_data { calc_seamless_xy, create_ranges_default(), 2, 2, 99 }, map2D_data { calc_seamless_xz, create_ranges_default(), 2, 2, 99 }, map2D_data { calc_seamless_yz, create_ranges_default(), 2, 2, 99 }, map2D_data { calc_seamless_xyz, create_ranges_default(), 2, 2, 99 })):&#160;imaging_map_test.cpp'],['../imaging__scaleToRange__test_8cpp.html#ac50812b684869d966427d0197d0409d0',1,'INSTANTIATE_TEST_SUITE_P(imaging_scaleToRange_test, imaging_scaleToRange_param, Values(imaging_scaleToRange_data { 4, 0, 1 })):&#160;imaging_scaleToRange_test.cpp'],['../interpolation__functions__test_8cpp.html#a173a35be9a799ace4506c313438fbb67',1,'INSTANTIATE_TEST_SUITE_P(noise, noInterp_params, Values(0.000, 0.500, 1.000, 1.500)):&#160;interpolation_functions_test.cpp'],['../interpolation__functions__test_8cpp.html#a9e0a68c8b531ff82a27988f3f463a6cc',1,'INSTANTIATE_TEST_SUITE_P(noise, linearInterp_params, Values(0.000, 0.500, 1.000, 1.500)):&#160;interpolation_functions_test.cpp'],['../interpolation__functions__test_8cpp.html#a0a453d3617cbb1ec34043420952806ee',1,'INSTANTIATE_TEST_SUITE_P(noise, hermiteInterp_params, Values(Func{0.000, 0.000}, Func{0.500, 0.500}, Func{1.000, 1.000}, Func{1.500, 0.000})):&#160;interpolation_functions_test.cpp'],['../interpolation__functions__test_8cpp.html#a8d00aaede503e0657cacdff3f0734058',1,'INSTANTIATE_TEST_SUITE_P(noise, quinticInterp_params, Values(Func{0.000, 0.000}, Func{0.500, 0.500}, Func{1.000, 1.000}, Func{1.500, 3.375})):&#160;interpolation_functions_test.cpp'],['../kernel__rotateDomain__test_8cpp.html#a42caffa23877e50d781f40ac43eea898',1,'INSTANTIATE_TEST_SUITE_P(kernel_rotateDomain3_test, kernel_rotateDomain3_param, Values(kernel_rotateDomain3_data { 4, 0, 1, 0, 0, {(vector3){ -1, -1, 0 },(vector3){ 0, -1, 0 },(vector3){ -1, 0, 0 },(vector3){ 0, 0, 0 } } }, kernel_rotateDomain3_data { 4, 1.57, 1, 0, 0, {(vector3){ -1, -0.000796, -1 },(vector3){ 0.000000, -0.000796, -1.000000 },(vector3){ -1.000000, 0.000000, 0.000000 },(vector3){ 0, 0, 0 } } })):&#160;kernel_rotateDomain_test.cpp'],['../kernel__rotateDomain__test_8cpp.html#acd3179c22fcaef99d6bb898ffb8b0753',1,'INSTANTIATE_TEST_SUITE_P(kernel_rotateDomain4_test, kernel_rotateDomain4_param, Values(kernel_rotateDomain4_data { 4, 0, 1, 0, 0, {(vector4){ -1, -1, 0, 99 },(vector4){ 0, -1, 0, 99 },(vector4){ -1, 0, 0, 99 },(vector4){ 0, 0, 0, 99 } } }, kernel_rotateDomain4_data { 4, 1.57, 1, 0, 0, {(vector4){ -1, -0.000796, -1, 99 },(vector4){ 0.000000, -0.000796, -1.000000, 99 },(vector4){ -1.000000, 0.000000, 0.000000, 99 },(vector4){ 0, 0, 0, 99 } } })):&#160;kernel_rotateDomain_test.cpp'],['../kernel__simplefBm__test_8cpp.html#aff164354183582ae04021d90ee9057a4',1,'INSTANTIATE_TEST_SUITE_P(kernel_simplefBm_test, kernel_simplefBm_param, Values(kernel_simplefBm_data { 4, value_noise3D, 200, noInterp, random_kiss09, 2, 1.0, false, { 0.384314, -1.749020, 0.949020, 0.086275 } })):&#160;kernel_simplefBm_test.cpp'],['../noise__cellular__functions__test_8cpp.html#a0d4ec5bda30b315adc9a817ccd37e1cb',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_cellular_noise2D_test, noise_cell_func2_params, Values(Cell2D {(vector2){ -10.0, -10.0 }, 200, distEuclid2, 18.011899 }, Cell2D {(vector2){ -5.0, -10.0 }, 200, distEuclid2, 72.943490 }, Cell2D {(vector2){ 0.0, -10.0 }, 200, distEuclid2, -57.643821 }, Cell2D {(vector2){ 5.0, -10.0 }, 200, distEuclid2, 49.627965 }, Cell2D {(vector2){ -10.0, 5.0 }, 200, distEuclid2, 0.133623 }, Cell2D {(vector2){ -5.0, 5.0 }, 200, distEuclid2, -87.675907 }, Cell2D {(vector2){ 0.0, 5.0 }, 200, distEuclid2, 95.684490 }, Cell2D {(vector2){ 5.0, 5.0 }, 200, distEuclid2, -10.900518 }, Cell2D {(vector2){ -10.0, 0.0 }, 200, distEuclid2, -23.899339 }, Cell2D {(vector2){ -5.0, 0.0 }, 200, distEuclid2, 47.488621 }, Cell2D {(vector2){ 0.0, 0.0 }, 200, distEuclid2, 46.469304 }, Cell2D {(vector2){ 5.0, 0.0 }, 200, distEuclid2, -93.750297 }, Cell2D {(vector2){ -10.0, -5.0 }, 200, distEuclid2, -47.540723 }, Cell2D {(vector2){ -5, -5 }, 200, distEuclid2, 17.030809 }, Cell2D {(vector2){ 0, -5 }, 200, distEuclid2, 138.801578 }, Cell2D {(vector2){ 5, -5 }, 200, distEuclid2, 69.693651 }, Cell2D {(vector2){ -1.0, -1.0 }, 200, distManhattan2, -15.063725 }, Cell2D {(vector2){ 0.0, 0.0 }, 200, distManhattan2, -4.259804 }, Cell2D {(vector2){ -1.0, -1.0 }, 200, distGreatestAxis2, -18.294118 }, Cell2D {(vector2){ 0.0, 0.0 }, 200, distGreatestAxis2, 31.107847 })):&#160;noise_cellular_functions_test.cpp'],['../noise__cellular__functions__test_8cpp.html#a5d60b8764468b2489e708f38a36adee9',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_cellular_noise3D_test, noise_cell_func3_params, Values(Cell3D {(vector3){ -1.0, -1.0, 0.0 }, 200, distEuclid3, 24.79700 }, Cell3D {(vector3){ -1.0, -1.0, 0.0 }, 200, distManhattan3, 32.22059 }, Cell3D {(vector3){ -1.0, -1.0, 0.0 }, 200, distGreatestAxis3, 17.058834 }, Cell3D {(vector3){ -1.0, -1.0, 0.0 }, 200, distLeastAxis3, 24.79700 })):&#160;noise_cellular_functions_test.cpp'],['../noise__cellular__functions__test_8cpp.html#a3c4bcebe7f6bf9a7204660c311e3d64e',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_cellular_noise4D_test, noise_cell_func4_params, Values(Cell4D {(vector4){ -1.0, -1.0, -1.0, 0.0 }, 200, distEuclid4, -81.92229 }, Cell4D {(vector4){ -1.0, -1.0, -1.0, 0.0 }, 200, distManhattan4, -75.90196 }, Cell4D {(vector4){ -1.0, -1.0, -1.0, 0.0 }, 200, distGreatestAxis4, -121.44118 }, Cell4D {(vector4){ -1.0, -1.0, -1.0, 0.0 }, 200, distLeastAxis4, -81.92229 })):&#160;noise_cellular_functions_test.cpp'],['../noise__cellular__functions__test_8cpp.html#aef0b630fc944e34b20b441d2559b10c9',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_cellular_noise6D_test, noise_cell_func6_params, Values(Cell6D {(vector8){ -1.0, -1.0, -1.0, -1.0, -1.0, 0.0 }, 200, distEuclid6, -101.23390 }, Cell6D {(vector8){ -1.0, -1.0, -1.0, -1.0, -1.0, 0.0 }, 200, distManhattan6, -75.90686 }, Cell6D {(vector8){ -1.0, -1.0, -1.0, -1.0, -1.0, 0.0 }, 200, distGreatestAxis6, -82.80882 }, Cell6D {(vector8){ -1.0, -1.0, -1.0, -1.0, -1.0, 0.0 }, 200, distLeastAxis6, -101.23390 })):&#160;noise_cellular_functions_test.cpp'],['../noise__functions__test_8cpp.html#ad621ca910515f1bde0c8f4c11cdd7fb7',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_noise2D_test, noise_func2_params, Values(Func2D {(vector2){ -1.0, -1.0 }, 200, value_noise2D, noInterp, -0.27843 }, Func2D {(vector2){ 0.0, 0.0 }, 200, value_noise2D, noInterp, 0.15294 }, Func2D {(vector2){ -1.0, -1.0 }, 200, value_noise2D, linearInterp, 0.15294 }, Func2D {(vector2){ 0.0, 0.0 }, 200, value_noise2D, linearInterp, 0.33333 }, Func2D {(vector2){ -1.0, -1.0 }, 200, value_noise2D, hermiteInterp, 0.15294 }, Func2D {(vector2){ 0.0, 0.0 }, 200, value_noise2D, hermiteInterp, 0.33333 }, Func2D {(vector2){ -1.0, -1.0 }, 200, value_noise2D, quinticInterp, 0.15294 }, Func2D {(vector2){ 0.0, 0.0 }, 200, value_noise2D, quinticInterp, 0.33333 }, Func2D {(vector2){ -1.0, -1.0 }, 200, gradient_noise2D, noInterp, 1.10679 }, Func2D {(vector2){ -1.0, -1.0 }, 200, gradval_noise2D, noInterp, 0.82836 }, Func2D {(vector2){ -1.0, -1.0 }, 200, white_noise2D, noInterp, 1.00000 }, Func2D {(vector2){ -1.0, -1.0 }, 200, simplex_noise2D, noInterp, 0.29398 }, Func2D {(vector2){ 0.0, 0.0 }, 200, simplex_noise2D, noInterp, -0.00000 })):&#160;noise_functions_test.cpp'],['../noise__functions__test_8cpp.html#a148844a4367f9e67bead05863fdc4dfb',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_noise3D_test, noise_func3_params, Values(Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, value_noise3D, noInterp, -0.82745 }, Func3D {(vector3){ -1.0, -0.5, 0.0 }, 200, value_noise3D, noInterp, 0.56078 }, Func3D {(vector3){ -1.0, 0.0, 0.0 }, 200, value_noise3D, noInterp, 0.56078 }, Func3D {(vector3){ -1.0, 0.5, 0.0 }, 200, value_noise3D, noInterp, 0.92157 }, Func3D {(vector3){ -0.5, -1.0, 0.0 }, 200, value_noise3D, noInterp, 0.25490 }, Func3D {(vector3){ -0.5, -0.5, 0.0 }, 200, value_noise3D, noInterp, 0.88235 }, Func3D {(vector3){ -0.5, 0.0, 0.0 }, 200, value_noise3D, noInterp, 0.88235 }, Func3D {(vector3){ -0.5, 0.5, 0.0 }, 200, value_noise3D, noInterp, 0.98431 }, Func3D {(vector3){ 0.0, -1.0, 0.0 }, 200, value_noise3D, noInterp, 0.25490 }, Func3D {(vector3){ 0.0, -0.5, 0.0 }, 200, value_noise3D, noInterp, 0.88235 }, Func3D {(vector3){ 0.0, 0.0, 0.0 }, 200, value_noise3D, noInterp, 0.88235 }, Func3D {(vector3){ 0.0, 0.5, 0.0 }, 200, value_noise3D, noInterp, 0.98431 }, Func3D {(vector3){ 0.5, -1.0, 0.0 }, 200, value_noise3D, noInterp, 0.80392 }, Func3D {(vector3){ 0.5, -0.5, 0.0 }, 200, value_noise3D, noInterp, -0.40392 }, Func3D {(vector3){ 0.5, 0.0, 0.0 }, 200, value_noise3D, noInterp, -0.40392 }, Func3D {(vector3){ 0.5, 0.5, 0.0 }, 200, value_noise3D, noInterp, 0.82745 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, value_noise3D, linearInterp, -0.47451 }, Func3D {(vector3){ 0.0, 0.0, 0.0 }, 200, value_noise3D, linearInterp, 0.28627 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, value_noise3D, hermiteInterp, -0.47451 }, Func3D {(vector3){ 0.0, 0.0, 0.0 }, 200, value_noise3D, hermiteInterp, 0.28627 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, value_noise3D, quinticInterp, -0.47451 }, Func3D {(vector3){ 0.0, 0.0, 0.0 }, 200, value_noise3D, quinticInterp, 0.28627 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, gradient_noise3D, noInterp, -3.00000 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, gradval_noise3D, noInterp, 0.82836 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, white_noise3D, noInterp, 1.00000 }, Func3D {(vector3){ -1.0, -1.0, 0.0 }, 200, simplex_noise3D, noInterp, -3.94705 }, Func3D {(vector3){ 0.0, 0.0, 0.0 }, 200, simplex_noise3D, noInterp, 0.00032 })):&#160;noise_functions_test.cpp'],['../noise__functions__test_8cpp.html#a4e03628f89a7e033331895bfe7ae0170',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_noise4D_test, noise_func4_params, Values(Func4D {(vector4){ -1.0, -1.0, -1.0, 0.0 }, 200, value_noise4D, noInterp, 0.76471 }, Func4D {(vector4){ -0.681690,-1.000000,-1.000000, 0.000000 }, 200, simplex_noise4D, noInterp, 0.571490 }, Func4D {(vector4){ -0.681690,-1.000000, 0.000000, 0.000000 }, 200, simplex_noise4D, noInterp, -0.835860 }, Func4D {(vector4){ -1.318310,-1.000000,-1.000000, 0.000000 }, 200, simplex_noise4D, noInterp, -0.361193 }, Func4D {(vector4){ -1.318310,-1.000000, 0.000000, 0.000000 }, 200, simplex_noise4D, noInterp, -0.572204 })):&#160;noise_functions_test.cpp'],['../noise__functions__test_8cpp.html#ae471fbb088f350809edecda7c69e8713',1,'INSTANTIATE_TEST_SUITE_P(noise_gen_noise6D_test, noise_func6_params, Values(Func6D {(vector8){ -1.0, -1.0, -1.0, -1.0, -1.0, 0.0 }, 200, value_noise6D, noInterp, 0.81961 }, Func6D {(vector8){ -0.681690,-1.000000,-0.681690,-1.000000,-1.318310,-1.000000 }, 200, simplex_noise6D, noInterp, 0.007967 }, Func6D {(vector8){ -0.681690,-1.000000,-1.318310,-1.000000,-1.318310,-1.000000 }, 200, simplex_noise6D, noInterp, 0.043427 }, Func6D {(vector8){ -1.318310,-1.000000,-0.681690,-1.000000,-1.318310,-1.000000 }, 200, simplex_noise6D, noInterp, -0.144565 }, Func6D {(vector8){ -1.318310,-1.000000,-1.318310,-1.000000,-1.318310,-1.000000 }, 200, simplex_noise6D, noInterp, -0.125572 })):&#160;noise_functions_test.cpp'],['../opencl__cellular__functions__test_8cpp.html#ac2fa429e4985245d246b521388dc8907',1,'INSTANTIATE_TEST_SUITE_P(opencl_cellular_function2D_test, opencl_cellular_function2D_fixture, Values(KernelContext(&quot;cellular_function2D_distEuclid&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions2D.cl&quot;), size), KernelContext(&quot;cellular_function2D_distManhattan&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions2D.cl&quot;), size), KernelContext(&quot;cellular_function2D_distGreatestAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions2D.cl&quot;), size), KernelContext(&quot;cellular_function2D_distLeastAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions2D.cl&quot;), size))):&#160;opencl_cellular_functions_test.cpp'],['../opencl__cellular__functions__test_8cpp.html#a979e2beeaa1c5b16dbbe062dc7bcbc24',1,'INSTANTIATE_TEST_SUITE_P(opencl_cellular_function3D_test, opencl_cellular_function3D_fixture, Values(KernelContext(&quot;cellular_function3D_distEuclid&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions3D.cl&quot;), size), KernelContext(&quot;cellular_function3D_distManhattan&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions3D.cl&quot;), size), KernelContext(&quot;cellular_function3D_distGreatestAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions3D.cl&quot;), size), KernelContext(&quot;cellular_function3D_distLeastAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions3D.cl&quot;), size))):&#160;opencl_cellular_functions_test.cpp'],['../opencl__cellular__functions__test_8cpp.html#afbcc1fe09d5907174d9d116907fd25b6',1,'INSTANTIATE_TEST_SUITE_P(opencl_cellular_function4D_test, opencl_cellular_function4D_fixture, Values(KernelContext(&quot;cellular_function4D_distEuclid&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions4D.cl&quot;), size), KernelContext(&quot;cellular_function4D_distManhattan&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions4D.cl&quot;), size), KernelContext(&quot;cellular_function4D_distGreatestAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions4D.cl&quot;), size), KernelContext(&quot;cellular_function4D_distLeastAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions4D.cl&quot;), size))):&#160;opencl_cellular_functions_test.cpp'],['../opencl__cellular__functions__test_8cpp.html#a84ed4871192032bede8d7fa4c9c73acc',1,'INSTANTIATE_TEST_SUITE_P(opencl_cellular_function6D_test, opencl_cellular_function6D_fixture, Values(KernelContext(&quot;cellular_function6D_distEuclid&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions6D.cl&quot;), size), KernelContext(&quot;cellular_function6D_distManhattan&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions6D.cl&quot;), size), KernelContext(&quot;cellular_function6D_distGreatestAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions6D.cl&quot;), size), KernelContext(&quot;cellular_function6D_distLeastAxis&quot;, readFile(&quot;src/test/cpp/kernels/cellular_functions6D.cl&quot;), size))):&#160;opencl_cellular_functions_test.cpp'],['../opencl__combineColor__test_8cpp.html#a391164ce91ee09d0b3388d6eece7f0ef',1,'INSTANTIATE_TEST_SUITE_P(opencl_combineColor_test, opencl_combineColor_fixture, Values(KernelContext(&quot;combineRGBA_simpleBillow&quot;, readFile(&quot;src/test/cpp/kernels/combineColor_simpleBillow_test.cl&quot;), size), KernelContext(&quot;combineHSVA_simpleBillow&quot;, readFile(&quot;src/test/cpp/kernels/combineColor_simpleBillow_test.cl&quot;), size))):&#160;opencl_combineColor_test.cpp'],['../opencl__heightmap__example__test_8cpp.html#ae5d82201e634a892cf70945e53140899',1,'INSTANTIATE_TEST_SUITE_P(opencl_heightmap_example_test, opencl_heightmap_example_fixture, Values(KernelContext(&quot;heightmap_example&quot;, readFile(&quot;src/test/cpp/kernels/heightmap_example.cl&quot;), size))):&#160;opencl_heightmap_example_test.cpp'],['../opencl__map2D__test_8cpp.html#a60d77d83e797634c8ac5af31483abc48',1,'INSTANTIATE_TEST_SUITE_P(opencl_map2D_test, value_map2D_default_fixture, Values(KernelContext(&quot;opencl_map2D_default_test&quot;, readFile(&quot;src/test/cpp/kernels/opencl_map2D_test.cl&quot;), size))):&#160;opencl_map2D_test.cpp'],['../opencl__noise2D__functions__test_8cpp.html#a2fd23d22afdcfa9b351e58a73c74eba2',1,'INSTANTIATE_TEST_SUITE_P(opencl_noise2D_functions_test, opencl_noise2D_functions_fixture, Values(KernelContext(&quot;value_noise2D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;value_noise2D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;value_noise2D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;value_noise2D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise2D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise2D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise2D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise2D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise2D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise2D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise2D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise2D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;white_noise2D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size), KernelContext(&quot;simplex_noise2D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise2D_functions.cl&quot;), size))):&#160;opencl_noise2D_functions_test.cpp'],['../opencl__noise3D__functions__test_8cpp.html#a3727dfcd4def298d496f6bb866966dbc',1,'INSTANTIATE_TEST_SUITE_P(opencl_noise3D_functions_test, opencl_noise3D_functions_fixture, Values(KernelContext(&quot;value_noise3D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;value_noise3D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;value_noise3D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;value_noise3D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise3D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise3D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise3D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise3D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise3D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise3D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise3D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise3D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;white_noise3D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size), KernelContext(&quot;simplex_noise3D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise3D_functions.cl&quot;), size))):&#160;opencl_noise3D_functions_test.cpp'],['../opencl__noise4D__functions__test_8cpp.html#a0850b180de387adaad2a95a5ab1d387c',1,'INSTANTIATE_TEST_SUITE_P(opencl_noise4D_functions_test, opencl_noise4D_functions_fixture, Values(KernelContext(&quot;value_noise4D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;value_noise4D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;value_noise4D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;value_noise4D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise4D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise4D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise4D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise4D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise4D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise4D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise4D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise4D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;white_noise4D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size), KernelContext(&quot;simplex_noise4D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise4D_functions.cl&quot;), size))):&#160;opencl_noise4D_functions_test.cpp'],['../opencl__noise6D__functions__test_8cpp.html#a46308b61f7c60cce3786838f2a10cef1',1,'INSTANTIATE_TEST_SUITE_P(opencl_noise6D_functions_test, opencl_noise6D_functions_fixture, Values(KernelContext(&quot;value_noise6D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;value_noise6D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;value_noise6D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;value_noise6D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise6D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise6D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise6D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradient_noise6D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise6D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise6D_linearInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise6D_hermiteInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;gradval_noise6D_quinticInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;white_noise6D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size), KernelContext(&quot;simplex_noise6D_noInterp&quot;, readFile(&quot;src/test/cpp/kernels/noise6D_functions.cl&quot;), size))):&#160;opencl_noise6D_functions_test.cpp'],['../opencl__simpleBillow__test_8cpp.html#a97a601cf6c0f29f910c9d41633deb40d',1,'INSTANTIATE_TEST_SUITE_P(opencl_simpleBillow3_test, opencl_simpleBillow3_fixture, Values(KernelContext(&quot;simpleBillow3_value_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_value_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradient_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_gradval_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_white_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_white_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_simplex_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillow3_simplex_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillow3_noise_functions.cl&quot;), size))):&#160;opencl_simpleBillow_test.cpp'],['../opencl__simpleBillowLayer__test_8cpp.html#a84d5b827561e61e822e611703d2f4960',1,'INSTANTIATE_TEST_SUITE_P(opencl_simpleBillowLayer_test, opencl_simpleBillowLayer_fixture, Values(KernelContext(&quot;simpleBillowLayer3_value_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_value_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradient_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_gradval_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_white_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_white_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_simplex_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleBillowLayer3_simplex_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleBillowLayer3_noise_functions.cl&quot;), size))):&#160;opencl_simpleBillowLayer_test.cpp'],['../opencl__simplefBm__test_8cpp.html#ad32eae83e7ab261ecdde7959dd438530',1,'INSTANTIATE_TEST_SUITE_P(opencl_simplefBm3_test, opencl_simplefBm3_fixture, Values(KernelContext(&quot;simplefBm3_value_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_value_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradient_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_gradval_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_white_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_white_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_simplex_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size), KernelContext(&quot;simplefBm3_simplex_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simplefBm3_noise_functions.cl&quot;), size))):&#160;opencl_simplefBm_test.cpp'],['../opencl__simpleFractalLayer__test_8cpp.html#a3946eaa16f6050129b957ab23060914f',1,'INSTANTIATE_TEST_SUITE_P(opencl_simpleFractalLayer_test, opencl_simpleFractalLayer_fixture, Values(KernelContext(&quot;simpleFractalLayer3_value_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_value_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradient_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_gradval_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_white_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_white_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_simplex_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleFractalLayer3_simplex_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleFractalLayer3_noise_functions.cl&quot;), size))):&#160;opencl_simpleFractalLayer_test.cpp'],['../opencl__simpleRidgedLayer__test_8cpp.html#a00081a06b162ac1c7ae8c0b4f15c504b',1,'INSTANTIATE_TEST_SUITE_P(opencl_simpleRidgedLayer_test, opencl_simpleRidgedLayer_fixture, Values(KernelContext(&quot;simpleRidgedLayer3_value_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_value_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradient_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_gradval_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_white_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_white_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_simplex_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedLayer3_simplex_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedLayer3_noise_functions.cl&quot;), size))):&#160;opencl_simpleRidgedLayer_test.cpp'],['../opencl__simpleRidgedMultifractal__test_8cpp.html#a870715b97f4cb663a03044d5c5b307f2',1,'INSTANTIATE_TEST_SUITE_P(opencl_simpleRidgedMultifractal3_test, opencl_simpleRidgedMultifractal3_fixture, Values(KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_value_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradient_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_linearInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_linearInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_hermiteInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_hermiteInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_quinticInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_gradval_noise3D_quinticInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_white_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_white_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_simplex_noise3D_noInterp_norot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size), KernelContext(&quot;simpleRidgedMultifractal3_simplex_noise3D_noInterp_rot&quot;, readFile(&quot;src/test/cpp/kernels/simpleRidgedMultifractal3_noise_functions.cl&quot;), size))):&#160;opencl_simpleRidgedMultifractal_test.cpp'],['../random__test_8cpp.html#a63a387c2fcddbd03fe5a738602eec517',1,'INSTANTIATE_TEST_SUITE_P(random_test, random_kiss09_param, Values(random_test_data { 100, random_kiss09, { 0.43175, 0.84003 } })):&#160;random_test.cpp']]],
  ['interp_184',['interp',['../structkernel__simplefBm__data.html#a2c4f3fedb82889c26d825a9edd6f847a',1,'kernel_simplefBm_data::interp()'],['../structFunc2D.html#a8b156b85ce7d6ef6295e09dee2676190',1,'Func2D::interp()'],['../structFunc3D.html#a72f7b661d50b076bd64bc032d7d3e7db',1,'Func3D::interp()'],['../structFunc4D.html#a20635b286105c9f754274f155d840ab7',1,'Func4D::interp()'],['../structFunc6D.html#aaaf6b02cdef0311b04758462080ed201',1,'Func6D::interp()']]],
  ['interp_5ffunc_185',['interp_func',['../noise__gen_8h.html#acad64853244634beaddcb3f86362fff5',1,'noise_gen.h']]],
  ['interp_5fx_5f2_186',['interp_X_2',['../noise__gen_8c.html#a1713582128bc6f6e9c33df4ac01e50e2',1,'noise_gen.c']]],
  ['interp_5fx_5f3_187',['interp_X_3',['../noise__gen_8c.html#a0331e7b4679cac26d9cd782a33c2472f',1,'noise_gen.c']]],
  ['interp_5fx_5f4_188',['interp_X_4',['../noise__gen_8c.html#a9efc861377ca53f2694ebfa401087d44',1,'noise_gen.c']]],
  ['interp_5fx_5f6_189',['interp_X_6',['../noise__gen_8c.html#a509f315442bce47a67f8e795c098ff51',1,'noise_gen.c']]],
  ['interp_5fxy_5f2_190',['interp_XY_2',['../noise__gen_8c.html#a52bf03989c9baed7e929cb372c8564f0',1,'noise_gen.c']]],
  ['interp_5fxy_5f3_191',['interp_XY_3',['../noise__gen_8c.html#ac4f263eae91ba871bf98ad5c1597ef3f',1,'noise_gen.c']]],
  ['interp_5fxy_5f4_192',['interp_XY_4',['../noise__gen_8c.html#aa8ebd498738f4de35787590b0e9d292a',1,'noise_gen.c']]],
  ['interp_5fxy_5f6_193',['interp_XY_6',['../noise__gen_8c.html#aaa5349b5b12295f87dbd0902f79ed5bc',1,'noise_gen.c']]],
  ['interp_5fxyz_5f3_194',['interp_XYZ_3',['../noise__gen_8c.html#aa74995f49628eb8e2fabc8f6a89e9b00',1,'noise_gen.c']]],
  ['interp_5fxyz_5f4_195',['interp_XYZ_4',['../noise__gen_8c.html#adf6c94d191e182e2beb4cb61544e9b51',1,'noise_gen.c']]],
  ['interp_5fxyz_5f6_196',['interp_XYZ_6',['../noise__gen_8c.html#a988f0f484049621743c3edcd66a3721b',1,'noise_gen.c']]],
  ['interp_5fxyzw_5f4_197',['interp_XYZW_4',['../noise__gen_8c.html#abe65ac9568364836c079c773e67a7756',1,'noise_gen.c']]],
  ['interp_5fxyzw_5f6_198',['interp_XYZW_6',['../noise__gen_8c.html#a1a1c262126cf4f1821ea5bf172d019a3',1,'noise_gen.c']]],
  ['interp_5fxyzwu_5f6_199',['interp_XYZWU_6',['../noise__gen_8c.html#abdb6160ae032f73c94a9b6fe279e8e74',1,'noise_gen.c']]],
  ['interp_5fxyzwuv_5f6_200',['interp_XYZWUV_6',['../noise__gen_8c.html#aa751ce84d2adc75816edd827fdd41b5d',1,'noise_gen.c']]],
  ['interpolation_5ffunctions_5ftest_2ecpp_201',['interpolation_functions_test.cpp',['../interpolation__functions__test_8cpp.html',1,'']]],
  ['ispowerof2_202',['isPowerOf2',['../utility_8c.html#ab91790891e3981ccbb645b30303ddefe',1,'isPowerOf2(unsigned int n):&#160;utility.c'],['../utility_8h.html#ab91790891e3981ccbb645b30303ddefe',1,'isPowerOf2(unsigned int n):&#160;utility.c']]]
];
